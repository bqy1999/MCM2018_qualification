from sklearn.tree import DecisionTreeRegressor                                                                                                                                                                                                                       
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import GridSearchCV
import pandas as pd
import numpy as np

df = pd.read_csv('1.csv',header=None,sep=',')
#df = df.fillna(method='pad')
#Replace NaN with the former element
#print df.head()
#print df.tail()
y_train = df[3]
y_train = y_train.fillna(method='pad')
#print y_train.head()
x_train = df.drop(3,axis=1)
x_train = x_train.drop(4,axis=1)
x_train = x_train.fillna(method='pad')
#print x_train.head()
#rf=RandomForestRegressor(max_depth=None,random_state=0)
#tuned_parameter = [{'min_samples_leaf':[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],'n_estimators':[115,120,125,130]}]
#clf = GridSearchCV(estimator=rf,param_grid=tuned_parameter,cv=5,n_jobs=1)
#clf.fit(x_train,y_train);

#print('Best parameters:')
#print(clf.best_params_)

rf=RandomForestRegressor(max_depth=None,random_state=None,min_samples_leaf=1,n_estimators=130)
rf.fit(x_train,y_train)

y_need = pd.read_csv('2.csv',header=None,sep=',')
print y_need.head()
print rf.predict(y_need)
